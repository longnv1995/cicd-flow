name: Trigger e2e tests manually
on:
  workflow_dispatch:
    inputs:
      test_env:
        description: Environment to run the tests
        required: true
        default: staging
        type: choice
        options:
          - develop
          - staging
          - production
      test_site:
        description: Site URL
        required: true
        default: 'https://longnv1995.github.io/demo-site/'
        type: string
      test_branch:
        description: Test branch
        required: true
        default: main
        type: string
      test_type:
        description: Test type
        required: true
        default: regression
        type: choice
        options:
          - smoke
          - regression
          - ui
          - api
          - visual
      notify_slack:
        description: Notify slack channel
        default: '#regression-tests-prodtest'
        required: true
        type: string
jobs:
  test:
    name: Run e2e tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      test_outcome: ${{ job.status }}
    steps:
      - name: Trigger e2e test by ${{ github.actor }}
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: "Running e2e test with parameters triggered by ${{ github.actor }}",
              attachments: [{
                color: 'good',
                fields: [{
                  title: 'Test environment',
                  value: '${{ inputs.test_env }}',
                  short: true
                },
                {
                  title: 'Site URL',
                  value: '${{ inputs.test_site }}',
                  short: true
                },
                {
                  title: 'Test branch',
                  value: '${{ inputs.test_branch }}',
                  short: false
                },
                {
                  title: 'Test type',
                  value: '${{ inputs.test_type }}',
                  short: false
                },
                {
                  title: 'Notify slack channels',
                  value: '${{ inputs.notify_slack }}',
                  short: false
                }],
                actions: [{
                }]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Checkout to branch ${{ inputs.test_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.test_branch }}
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Run Playwright tests
        run: ENV=${{ inputs.test_env }} TEST_TYPE=${{ inputs.test_type }} make test
      - name: Upload HTML test report
        uses: actions/upload-artifact@v4
        if: '${{ !cancelled() }}'
        with:
          name: HTML Test Report
          path: playwright-report/
          retention-days: 30
      - name: Publish test summary results
        run: npx github-actions-ctrf playwright-report/ctrf-test-report.json
        if: always()
  notify:
    name: Send Slack Notification
    needs: test
    if: always()
    uses: ./.github/workflows/slack-notification.yml
    with:
      job_status: ${{ needs.test.outputs.test_outcome }}
      repository: ${{ github.repository }}
      branch: ${{ github.ref_name }}
      commit: ${{ github.event.after || github.event.pull_request.head.sha }}
      actor: ${{ github.actor }}
      run_id: ${{ github.run_id }}
      slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}